{
  "version": 3,
  "sources": ["../../../../src/functions/deleteTodos.ts", "../../../../src/utils/dynamodbClients.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\";\nimport { document } from \"../utils/dynamodbClients\";\n\nexport const handler: APIGatewayProxyHandler = async (event) => {\n  const { id } = event.pathParameters;\n\n  await document\n    .delete({\n      TableName: \"todos\",\n      Key: { id: id },\n    })\n    .promise();\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Todo apagado com sucesso!',\n    }),\n  };\n};\n", "import { DynamoDB } from \"aws-sdk\";\n\nconst options = {\n  region: \"localhost\",\n  endpoint: \"http://localhost:8000\",\n  accessKeyId: \"xxxx\",\n  secretAccessKey: \"xxxx\",\n};\n\n/**\n * A vari\u00E1vel de ambiente IS_OFFLINE \u00E9 definida como 'true' pelo plugin \"serverless-dynamodb-local\"\n */\nconst isOffline = () => {\n  console.log(\"process.env.IS_OFFLINE: \", process.env.IS_OFFLINE);\n  return process.env.IS_OFFLINE;\n};\n\nexport const document = isOffline()\n  ? new DynamoDB.DocumentClient(options)\n  : new DynamoDB.DocumentClient();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACd,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AAAA,EACb,iBAAiB;AACnB;AAKA,IAAM,YAAY,MAAM;AACtB,UAAQ,IAAI,4BAA4B,QAAQ,IAAI,UAAU;AAC9D,SAAO,QAAQ,IAAI;AACrB;AAEO,IAAM,WAAW,UAAU,IAC9B,IAAI,wBAAS,eAAe,OAAO,IACnC,IAAI,wBAAS,eAAe;;;ADhBzB,IAAM,UAAkC,OAAO,UAAU;AAC9D,QAAM,EAAE,OAAO,MAAM;AAErB,QAAM,SACH,OAAO;AAAA,IACN,WAAW;AAAA,IACX,KAAK,EAAE,GAAO;AAAA,EAChB,CAAC,EACA,QAAQ;AAEX,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACnB,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACF;",
  "names": []
}
